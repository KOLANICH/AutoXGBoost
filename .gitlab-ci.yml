#image: pypy:latest
image: registry.gitlab.com/kolanich/fixed_python:latest

build:
  tags:
    - shared
  stage: build
  variables:
    GIT_DEPTH: "1"
    PYTHONUSERBASE: "${CI_PROJECT_DIR}/python_user_packages"

  before_script:
    - export PATH="$PATH:$PYTHONUSERBASE/bin" # don't move into `variables`
    - pip3 install --upgrade --user --pre scikit-learn
    - pip3 install --upgrade --user --pre git+https://github.com/berkerpeksag/astor.git
    - . ./.ci/installPhaseCustomCommands.sh
  
  script:
    - python3 setup.py bdist_wheel
    - pip3 install --upgrade --user ./dist/*.whl
    - coverage run --source=AutoXGBoost -m pytest --junitxml=./rspec.xml ./tests/tests.py
    - coverage report -m
    - coveralls
    - codecov

  cache:
    paths:
      - $PYTHONUSERBASE

  artifacts:
    paths:
      - dist
      - tests/models
    reports:
      junit: ./rspec.xml

checks:
  stage: test
  tags:
    - shared
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:dind
  script:
    - docker run --env SAST_CONFIDENCE_LEVEL=5 --volume "$PWD:/code" --volume /var/run/docker.sock:/var/run/docker.sock "registry.gitlab.com/gitlab-org/security-products/sast:latest" /app/bin/run /code
    #- docker run --env SOURCE_CODE="$PWD" --env CODECLIMATE_VERSION="latest" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock "registry.gitlab.com/gitlab-org/security-products/codequality:latest" /code
    #- docker run --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}" --volume "$PWD:/code" --volume /var/run/docker.sock:/var/run/docker.sock "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:latest" /code


pages:
  image: alpine:latest
  allow_failure: true
  before_script:
    - apk update
    - apk add doxygen
    - apk add ttf-freefont graphviz
  script:
    - doxygen ./Doxyfile
  artifacts:
    paths:
      - public
  only:
    - master
